{
  "name": "test-nitro",
  "version": "1.0.0",
  "description": "Nitro is a Node.js application for simple and complex frontend development with a tiny footprint. This app is based on generator-nitro 7.3.0",
  "license": "UNLICENSED",
  "private": true,
  "author": "The Nitro Team",
  "engines": {
	  "node": ">=14.15.0 <19",
	  "npm": ">=6.14.8 <10"
  },
  "scripts": {
    "\n# PROJECT ------- ": "",
    "clean": "npx -y npm-run-all --npm-path npm clean:*",
    "clean:lock": "rimraf package-lock.json",
    "clean:modules": "npx -y rimraf node_modules",
    "commit": "git-cz",
    "nitro:pattern": "yo nitro:pattern",
    "nitro:server": "npm run build && rimraf dist/ && yo nitro:server --folder=dist",
    "nitro:update": "npm uninstall generator-nitro && npm install generator-nitro@latest --save-dev --save-exact && yo nitro",
    "update-dependencies": "npm-check-updates -u --deprecated",
    "\n# MISC ------- ": "",
    "postinstall": "cd ./ && husky install && npm rebuild node-sass && env-linter --hooksInstalled --saveExact --dependenciesExactVersion --lts",
    "\n# LINT/TEST ------- ": "",
    "check-node-version": "check-node-version --print --package",
    "cypress-test": "npm run build && cross-env PORT=8888 NITRO_MODE=test npm-run-all --parallel --race test:cypress:serve cypress-test:open",
    "cypress-test:open": "cypress open --project ./tests/cypress/ --e2e --browser chrome",
    "lighthouse-test": "npm run build && cross-env PORT=8890 NITRO_MODE=test npm-run-all --parallel --race lighthouse-test:*",
    "lighthouse-test:serve": "npm run prod:serve",
    "lighthouse-test:run": "lighthouse http://localhost:8890/example-patterns --quiet --configPath=./tests/lighthouse/lighthouse.config.js --output-path=./public/reports/lighthouse/report.html --view",
    "lint": "npm-run-all lint:*",
    "lint:css": "stylelint src/**/*.*ss --allow-empty-input",
    "lint:data": "nitro-app-validate-pattern-data",
    "lint:html": "gulp lint-html",
    "lint:js": "eslint ./src --ext .js,.jsx",
    "lint:license": "license-checker --production --summary --exclude \"Apache-2.0, BSD, ISC, LGPL, MIT, MPL\" --failOn \"AGPL; EPL; GPL\"",
    "prettier": "prettier --write \"**/*.*(js|jsx|ts|tsx|json|md|mdx|graphql|gql|yml|yaml)\"",
    "test": "npm-run-all test:*",
    "test:lint": "npm run lint",
    "test:cypress": "npm run build && cross-env PORT=8888 NITRO_MODE=test npm-run-all --parallel --race test:cypress:*",
    "test:cypress:serve": "npm run prod:serve",
    "test:cypress:test": "cypress run --project ./tests/cypress/",
    "visual-approve": "backstop approve --config=tests/backstop/backstop.config.js --docker",
    "visual-test": "npm run build && cross-env PORT=8889 npm-run-all --parallel --race visual-test:*",
    "visual-test:serve": "npm run prod:serve",
    "visual-test:test": "backstop test --config=tests/backstop/backstop.config.js --docker",
    "\n# BUILD/RELEASE ------- ": "",
    "build": "npm-run-all build:*",
    "build:clean": "rimraf public/assets",
    "build:assets": "gulp assets",
    "build:webpack": "npm-run-all build:webpack:*",
    "build:webpack:light": "cross-env THEME=light webpack --mode production --config config/webpack/webpack.config.prod.js",
    "build:webpack:dark": "cross-env THEME=dark webpack --mode production --config config/webpack/webpack.config.prod.js",
    "export": "npm run build && gulp export",
    "\n# RUN ------- ": "",
    "dev": "npm-run-all check-node-version --parallel --race dev:*",
    "dev:serve": "cross-env NODE_ENV=development nitro-app-serve",
    "dev:watch": "gulp develop",
    "prod": "npm-run-all prod:*",
    "prod:check": "npm run check-node-version",
    "prod:build": "npm run build",
    "prod:serve": "cross-env NODE_ENV=production nitro-app-serve",
    "start": "npm run start:light",
    "start:light": "cross-env THEME=light PORT=8081 PROXY=8082 npm run dev",
    "start:dark": "cross-env THEME=dark PORT=8083 PROXY=8084 npm run dev",
    "\n# DOCKER ------- ": "",
    "docker:update": "docker-compose build",
    "docker:start": "npm run docker:dev:start",
    "docker:dev:start": "docker-compose -f docker-compose-dev.yml up",
    "docker:dev:console": "docker exec -it test-nitro_server-dev bash",
    "docker:prod": "docker-compose up"
  },
  "keywords": [
    "frontend",
    "app",
    "nitro",
    "component",
    "pattern",
    "modular"
  ],
  "dependencies": {
    "@gondel/core": "1.2.7",
    "@gondel/plugin-hot": "1.2.7",
    "bootstrap": "5.2.3",
    "core-js": "3.29.0",
    "flatpickr": "4.6.13",
    "handlebars": "4.7.7",
    "jquery": "3.6.4",
    "lazysizes": "5.3.2",
    "lottie-web": "5.10.2",
    "prevent-window-opener-attacks": "0.3.0",
    "regenerator-runtime": "0.13.11",
    "svg4everybody": "2.1.9"
  },
  "devDependencies": {
    "@babel/eslint-parser": "7.19.1",
    "@khanacademy/tota11y": "0.2.0",
    "@merkle-open/eslint-config": "1.0.0",
    "@merkle-open/html-validate-config": "1.0.1",
    "@merkle-open/prettier-config": "1.0.1",
    "@merkle-open/stylelint-config": "1.0.0",
    "@merkle-open/ts-config": "1.0.1",
    "@nitro/app": "7.3.0",
    "@nitro/exporter": "7.3.0",
    "@nitro/gulp": "7.3.0",
    "@nitro/webpack": "7.3.0",
    "backstopjs": "6.1.4",
    "check-node-version": "4.2.1",
    "commitizen": "4.3.0",
    "config": "3.3.9",
    "cross-env": "7.0.3",
    "cypress": "12.7.0",
    "cz-conventional-changelog": "3.3.0",
    "env-linter": "1.0.0",
    "eslint": "7.32.0",
    "eslint-plugin-import": "2.27.5",
    "extend": "3.0.2",
    "generator-nitro": "7.3.0",
    "gulp": "4.0.2",
    "husky": "8.0.3",
    "html-validate": "7.13.3",
    "license-checker": "25.0.1",
    "lighthouse": "10.0.2",
    "lint-staged": "13.2.0",
    "node-sass": "8.0.0",
    "npm-check-updates": "16.7.12",
    "npm-run-all": "4.1.5",
    "prettier": "2.8.4",
    "rimraf": "4.4.0",
    "stylelint": "14.16.1",
    "webpack-cli": "4.10.0",
    "yo": "4.3.1"
  },
  "browserslist": [
    "> 0.2%",
    "last 1 version",
    "not dead"
  ],
  "postcss": {},
  "config": {
    "commitizen": {
      "path": "cz-conventional-changelog"
    }
  },
  "lint-staged": {
    "src/**/*.{css,scss}": [
      "stylelint --allow-empty-input"
    ],
    "**/*.json": [
      "prettier --write",
      "npm run lint:data"
    ],
    "src/**/*.{js,jsx}": [
      "prettier --write",
      "eslint"
    ],
    "**/*.md": [
      "prettier --write"
    ],
    "**/*.yml": [
      "prettier --write"
    ],
    "package.json": [
      "env-linter --saveExact --dependenciesExactVersion"
    ]
  }
}
